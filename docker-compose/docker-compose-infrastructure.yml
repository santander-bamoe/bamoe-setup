services:

  postgres:
    container_name: bamoe-postgres
    image: postgres:16.8-alpine3.21
    ports:
      - "5432:5432"
    volumes:
      - ./sql/postgresql:/docker-entrypoint-initdb.d:Z
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "kogito", "-U", "kogito-user"]
      timeout: 45s
      interval: 10s
      retries: 50
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
 
  pgadmin:
    container_name: bamoe-pgadmin
    image: dpage/pgadmin4:9.1
    ports:
      - 8055:80
    depends_on:
      - postgres
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgadmin4/pgpass
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    environment:
      PGADMIN_DEFAULT_EMAIL: user@bamoe.ibm.com
      PGADMIN_DEFAULT_PASSWORD: pass
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      GUNICORN_ACCESS_LOGFILE: "/dev/null"
 
  keycloak:
    container_name: bamoe-keycloak
    image: quay.io/keycloak/keycloak:26.0.5
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 8180:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    volumes:
      - ./keycloak-realm:/opt/keycloak/data/import
    command: start-dev --import-realm